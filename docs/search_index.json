[["index.html", "Estadística para todxs Preámbulo", " Estadística para todxs Facultad de Psicología, Universidad de Talca 2022-09-04 Preámbulo Este curso se basa en Statistics without tears de Derek Rowntree y Discovering statistics using R de Andy Field, Jeremy Miles y Zoë Field. Este curso también utiliza material del libro &quot;Discovering statistics using R&quot;. Este material es accesible aquí. Este curso asume que no sabes nada de estadística. Sin embargo, si asume que sabes aritmética básica y fracciones. La base de datos que vamos a utilizar se encuentra aquí. ¡Que disfrutes el curso! "],["introducción-a-la-estadística.html", "Capítulo 1 Introducción a la estadística 1.1 ¿Qué es la estadística? 1.2 ¿Variables? 1.3 Diseños experimentales 1.4 ¿Qué medimos? 1.5 Un prueba estadística 1.6 ¿Que diseño usaré? 1.7 Una historia fantástica 1.8 ¿Randomizar?", " Capítulo 1 Introducción a la estadística En este capítulo introductorio vamos a ir paso a paso. Vamos a hacernos de una visión general de la estadística y vamos a entender por qué tenemos que hacer &quot;inferencias&quot;, es decir, sacar conclusiones de algunos datos que recolectamos para saber algo del mundo alredor nuestro (de una población en particular). 1.1 ¿Qué es la estadística? Revisa este video y trata de responder: ¿Qué es la estadística descriptiva y la estadística inferencial? ¿Qué es una población y una muestra? ¿Qué son los &quot;parámetros&quot;&quot; y los &quot;estadísticos&quot;? ¿Por qué necesitamos obtener una muestra para nuestros experimentos? ¿Por qué necesitamos las probabilidades para realizar análisis estadísticos? 1.2 ¿Variables? Revisa este video y trata de responder: ¿Qué tipos de variables existen? ¿Que significa definir variables y operacionalizar? ¿Que es una variable independiente? ¿Que es una variable dependiente? ¿Cómo se construye una hipótesis? 1.3 Diseños experimentales Revisa este video y trata de responder: ¿Qué tipos de diseño experimental existen? ¿Cuáles son las ventajas y desventajas de cada uno de ellos? 1.4 ¿Qué medimos? Revisa este video y trata de responder: ¿Qué aspectos son importantes a la hora de diseñar un experimento? ¿Qué es la validez de una medición? ¿Qué es la replicabilidad de una medición? ¿Qué es un factor confundente? 1.5 Un prueba estadística Revisa este video y trata de responder: ¿Por qué es tan importante evaluar como cambian (o varían) las variables? ¿Qué hace un prueba estadística (en términos de los cambios que experimenta una variable)? ¿Qué es la variación sistemática (VS)? ¿Qué es la variación no sistemática (VNS)? Sí una manipulación experimental produce un efecto genuino como será la razón VS/VNS? 1.6 ¿Que diseño usaré? Revisa este video y trata de responder: ¿Cuál es la diferencia entre un diseño intra-sujetos y un diseño entre-sujetos? ¿Cuál es la relación entre un diseño experimental y su análisis estadístico asociado? 1.7 Una historia fantástica Revisa este video y trata de responder: ¿Quién fué Roland Fisher? ¿Dé dónde viene el 5% (o p = 0.05) que usamos en estadística? 1.8 ¿Randomizar? Revisa este video y trata de responder: ¿Para que se usa la randomización? ¿Qué son los efectos de práctica y de aburrimiento en un diseño intra-sujetos? ¿Cómo podemos confeccionar un buen diseño entre-sujetos? "],["conceptos-estadísticos.html", "Capítulo 2 Conceptos estadísticos 2.1 La significancia 2.2 Colas 2.3 Errores estadísticos 2.4 Tamaño &amp; poder 2.5 Experimentar", " Capítulo 2 Conceptos estadísticos 2.1 La significancia Revisa este video y trata de responder: ¿Qué me dice y qué no me dice el valor de p? ¿Cómo se interpreta un resultado estadístico nulo? 2.2 Colas Revisa este video y trata de responder: ¿Cuál es la diferencia entre una hipótesis de una cola y una hipótesis de dos colas? ¿Por qué los criterios de significancia son más altos para una hipótesis de una cola que para una hipótesis de dos colas? 2.3 Errores estadísticos Revisa este video y trata de responder: ¿Qué es un error de tipo I? ¿Qué es un error de tipo II? ¿Por qué hay un balance entre el error de tipo I y II? ¿Qué es mas perjudicial para un estudio? ¿Un error de tipo I o II? 2.4 Tamaño &amp; poder Revisa este video y trata de responder: ¿Qué es el tamaño del efecto? ¿Cómo se contabiliza el tamaño del efecto? ¿Qué es el poder estadístico? ¿Cómo definimos el tamaño de la muestra que necesitamos para un experimento? 2.5 Experimentar Revisa este video y trata de responder: ¿Cómo planificar mejor mi estudio? ¿Por qué debo planificar mi análisis ANTES de recolectar los datos? "],["programación.html", "Capítulo 3 Programación 3.1 Empezando a trabajar en R 3.2 Trabajando con data frames 3.3 Importando datos", " Capítulo 3 Programación 3.1 Empezando a trabajar en R En un script es esencial incluir comentarios. De esta manera puedes acordarte (y otros puedes entender) que está haciendo tu código. Para escribir un comentario debes anteponer un #. En el inicio de un script es un buen hábito poner una fecha y tus iniciales. Por ejemplo: # JLUF 16/08/2022 También es buena idea que agregues una breve descripción de lo que hace tu código. # JLUF 16/08/2022 # Estadística descriptiva R tiene algunas funciones integradas. Por ejemplo: el promedio (mean) y la desviación estándar (sd). Para probar estas funciones podemos aplicarlas a una series de números (o vector). Para crear un vector podemos usar la c y un paréntesis. Lo que hacemos con la * c* es concatenar números. # JLUF 16/08/2022 # Estadística descriptiva # Promedio entre 2 y 3 mean(c(2,3)) ## [1] 2.5 # Deviación estándar entre 2 y 3 sd(c(2,3)) ## [1] 0.7071068 Comúnmente para hacer un cálculo de manera óptima usamos algo que se llama asignación. Es decir, creamos una variable y le asignamos un valor. Por ejemplo, definimos que a equivale a 2 y b equivale a 3. Luego podemos usar solamente esas variables para hacer cálculos. Para asignar ponemos una flecha: &quot;&lt;-&quot; a &lt;- 2 b &lt;- 3 mean(c(a,b)) ## [1] 2.5 También podemos crear variables que contengan texto. Por ejemplo, podemos crear una lista con los integrantes de Metallica. metallica &lt;- c(&quot;Lars&quot;, &quot;James&quot;, &quot;Jason&quot;, &quot;Kirk&quot;) metallica ## [1] &quot;Lars&quot; &quot;James&quot; &quot;Jason&quot; &quot;Kirk&quot; Este es un vector de carácteres. Además, puedes usar las funciones str() y class() para averiguar la naturaleza de estas variables. class(metallica) ## [1] &quot;character&quot; str(metallica) ## chr [1:4] &quot;Lars&quot; &quot;James&quot; &quot;Jason&quot; &quot;Kirk&quot; Para inspeccionar cada elemento de esta variable puedes usar el paréntesis cuadrado. Esto se llama indexar. Por ejemplo, para ver el primer elemento puedes hacer lo siguiente: metallica[1] ## [1] &quot;Lars&quot; O podrías ver desde el primero al segundo. metallica[1:2] ## [1] &quot;Lars&quot; &quot;James&quot; O podrías ver desde el segundo al tercero. metallica[2:3] ## [1] &quot;James&quot; &quot;Jason&quot; Si te das cuenta que tu lista tiene un elemento incorrecto lo puedes eliminar. Para ello debes crear una nueva variable a partir de metallica pero dentro del paréntesis cuadrado usamos una fórmula lógica. La fórmula nos permite seleccionar ciertos elementos. Por ejemplo, si queremos todos los elementos de la variable metallica excepto el elemento Jason (de ahí viene la parte !=) podemos hacer lo siguente: new_metallica &lt;- metallica[metallica != &quot;Jason&quot;] new_metallica ## [1] &quot;Lars&quot; &quot;James&quot; &quot;Kirk&quot; También puedes eliminar dos elementos indicandole a R que quieres eliminar los elementos del 2 al 3: metallica_duo &lt;- metallica[-c(2,3)] metallica_duo ## [1] &quot;Lars&quot; &quot;Kirk&quot; Lo que podríamos hacer enseguida es agregar un nuevo elemento. Para hacer esto concatenamos, usado la c, un variable con otra variable. Por ejemplo, para concatenar new_metallica con &quot;Rob&quot; hacemos lo siguiente: last_metallica &lt;- c(new_metallica, &quot;Rob&quot;) last_metallica ## [1] &quot;Lars&quot; &quot;James&quot; &quot;Kirk&quot; &quot;Rob&quot; Incluso podríamos elegir dónde agregar a Rob. Por ejemplo, lo podemos agregar al final. last_metallica_2 &lt;- c(&quot;Rob&quot;, new_metallica) last_metallica_2 ## [1] &quot;Rob&quot; &quot;Lars&quot; &quot;James&quot; &quot;Kirk&quot; O lo podemos agregar en la penúltima posición: last_metallica_3 &lt;- c(new_metallica[1:2], &quot;Rob&quot;, new_metallica[3]) last_metallica_3 ## [1] &quot;Lars&quot; &quot;James&quot; &quot;Rob&quot; &quot;Kirk&quot; Ejercicio: Crea una variable que represente a tu banda favorita. 3.2 Trabajando con data frames Podemos crear variables de distintos tipos (lista de palabras o listas de números): metallicaNames &lt;- c(&quot;Lars&quot;, &quot;James&quot;, &quot;Kirk&quot;, &quot;Rob&quot;) metallicaNames ## [1] &quot;Lars&quot; &quot;James&quot; &quot;Kirk&quot; &quot;Rob&quot; metallicaAges &lt;- c(47, 47, 48, 46) metallicaAges ## [1] 47 47 48 46 metallicaColor &lt;- c(&quot;Blue&quot;, &quot;Red&quot;, &quot;Yellow&quot;, &quot;Green&quot;) metallicaColor ## [1] &quot;Blue&quot; &quot;Red&quot; &quot;Yellow&quot; &quot;Green&quot; Pero más importante que eso es que podemos reunir estas variables en una estructura mas compleja. Esta estructura se llama data frame. Un data frame puede acomodar distintos tipos de datos y los pone en distintas &quot;cajas&quot;. Para crear un data frame usamos la función data.frame metallicaDataFrame &lt;- data.frame(metallicaNames, metallicaAges, metallicaColor) metallicaDataFrame ## metallicaNames metallicaAges metallicaColor ## 1 Lars 47 Blue ## 2 James 47 Red ## 3 Kirk 48 Yellow ## 4 Rob 46 Green Fijate que al crear el data frame el nombre de la variable se vuelve el encabezado de esos datos en el dataframe. Si queremos podemos cambiarle el nombre a estos encabezados. Podemos hacer esto usando la función colnames. colnames(metallicaDataFrame) &lt;- c(&quot;name&quot;, &quot;age&quot;, &quot;color&quot;) metallicaDataFrame ## name age color ## 1 Lars 47 Blue ## 2 James 47 Red ## 3 Kirk 48 Yellow ## 4 Rob 46 Green O mejor aún puedes definirlo al momento de crear la data frame: metallicaDataFrame &lt;- data.frame(Name = metallicaNames, Age = metallicaAges, Color = metallicaColor) metallicaDataFrame ## Name Age Color ## 1 Lars 47 Blue ## 2 James 47 Red ## 3 Kirk 48 Yellow ## 4 Rob 46 Green Mira también la estructura de este data frame. Verás que hay 4 observacions y 3 variables. Dos de estas listas son carácteres. str(metallicaDataFrame) ## &#39;data.frame&#39;: 4 obs. of 3 variables: ## $ Name : chr &quot;Lars&quot; &quot;James&quot; &quot;Kirk&quot; &quot;Rob&quot; ## $ Age : num 47 47 48 46 ## $ Color: chr &quot;Blue&quot; &quot;Red&quot; &quot;Yellow&quot; &quot;Green&quot; Para mirar cada una de las lista puedes usar el símbolo $ metallicaDataFrame$Name ## [1] &quot;Lars&quot; &quot;James&quot; &quot;Kirk&quot; &quot;Rob&quot; metallicaDataFrame$Age ## [1] 47 47 48 46 metallicaDataFrame$Color ## [1] &quot;Blue&quot; &quot;Red&quot; &quot;Yellow&quot; &quot;Green&quot; Además, podemos eliminar una de estas listas si no nos interesa. metallicaDataFrame$Color &lt;- NULL metallicaDataFrame ## Name Age ## 1 Lars 47 ## 2 James 47 ## 3 Kirk 48 ## 4 Rob 46 Mas importante aún es el hecho que podemos hacer cálculos matemáticos de forma masiva. Primero, agreguemos una columna nueva: metallicaDataFrame$ChildAge &lt;- c(12, 12, 4, 6) metallicaDataFrame ## Name Age ChildAge ## 1 Lars 47 12 ## 2 James 47 12 ## 3 Kirk 48 4 ## 4 Rob 46 6 Luego, podemos calcular la diferencia entre estas dos columnas y la asignamos a una nueva columna: metallicaDataFrame$FatherhoodAge &lt;- metallicaDataFrame$Age - metallicaDataFrame$ChildAge metallicaDataFrame ## Name Age ChildAge FatherhoodAge ## 1 Lars 47 12 35 ## 2 James 47 12 35 ## 3 Kirk 48 4 44 ## 4 Rob 46 6 40 Podemos agregar mas datos a partir de otra variable. Y para crear variables podemos concatenar pedazos de datos. Por ejemplo, podríamos querer crear un set de datos de 15 valores que representen 3 condiciones experimentales. Cada condición experimental podría estar repetida 5 veces. Si queremos repetir la condición 1 tres veces hacemos: rep(1,5) ## [1] 1 1 1 1 1 El primer parámetro dentro de la función rep es el número que quieres repetir. El segundo parámetro define las veces que se va a definir ese número. Luego, podemos concatenar repeticiones de distintos números. vector1 &lt;- c(rep(1,5), rep(2,5), rep(3,5)) vector1 ## [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 Y eso lo podemos agregar luego en una data frame. Veamos un ejemplo mas elaborado. Vamos a crear un base de datos sobre el nombre, la fecha de nacimiento y el trabajo de distintas personas. Para que R identifique los números como fechas usamos la función as.Date(por defecto el formato es yyyy-mm-dd). name &lt;- c(&quot;Ben&quot;, &quot;Martin&quot;,&quot;Andy&quot;,&quot;Paul&quot;, &quot;Graham&quot;,&quot;Carina&quot;,&quot;Karina&quot;,&quot;Doug&quot;,&quot;Mark&quot;, &quot;Zoe&quot;) name ## [1] &quot;Ben&quot; &quot;Martin&quot; &quot;Andy&quot; &quot;Paul&quot; &quot;Graham&quot; &quot;Carina&quot; &quot;Karina&quot; &quot;Doug&quot; &quot;Mark&quot; &quot;Zoe&quot; birth_date &lt;- as.Date(c(&quot;1977-07-03&quot;, &quot;1969-05-24&quot;, &quot;1973-06-21&quot;, &quot;1970-07-16&quot;, &quot;1949-10-10&quot;, &quot;1983-11-05&quot;, &quot;1987-10-08&quot;, &quot;1989-09-16&quot;, &quot;1973-05-20&quot;, &quot;1984-11-12&quot;)) birth_date ## [1] &quot;1977-07-03&quot; &quot;1969-05-24&quot; &quot;1973-06-21&quot; &quot;1970-07-16&quot; &quot;1949-10-10&quot; &quot;1983-11-05&quot; &quot;1987-10-08&quot; &quot;1989-09-16&quot; ## [9] &quot;1973-05-20&quot; &quot;1984-11-12&quot; job &lt;- c(rep(1, 5), rep(2, 5)) # que es el equivalente a: job &lt;- c(1,1,1,1,1,2,2,2,2,2) job ## [1] 1 1 1 1 1 2 2 2 2 2 La variable job es categórica. El número 1 indica que es un profesor y el 2 indica que es un estudiante. Para R son sólo números. Para decirle a R que es una variable categórica (o en el lenguaje de R un factor) tenemos que indicarselo usando la función factor. Además, podemos crear etiquetas o nombres que nos hagan mas sentido a nosotros. En este caso este factor tiene dos niveles: Lecturer y Student. job &lt;- factor(job, levels = c(1:2), labels = c(&quot;Lecturer&quot;, &quot;Student&quot;)) job ## [1] Lecturer Lecturer Lecturer Lecturer Lecturer Student Student Student Student Student ## Levels: Lecturer Student Luego, el paso final es poner todo junto: dataframe1 &lt;- data.frame(name, birth_date, job) dataframe1 ## name birth_date job ## 1 Ben 1977-07-03 Lecturer ## 2 Martin 1969-05-24 Lecturer ## 3 Andy 1973-06-21 Lecturer ## 4 Paul 1970-07-16 Lecturer ## 5 Graham 1949-10-10 Lecturer ## 6 Carina 1983-11-05 Student ## 7 Karina 1987-10-08 Student ## 8 Doug 1989-09-16 Student ## 9 Mark 1973-05-20 Student ## 10 Zoe 1984-11-12 Student Ejercicio: Crea una data frame con los integrantes de tu grupo familiar o de tu curso. En tu data frame agrega el nombre, apellido y la edad. 3.3 Importando datos La mayoría del tiempo vas a importar más que crear datos. Para ello cuando trabajes en R debes decirle en que carpeta de tu computador están esos archivos. Es decir, debes definir tu directorio de trabajo con la función setwd Por ejemplo, para mí sería algo así: setwd(&quot;C:/Users/Usuario/Documents/JoseLuis/UTalca_2018/Stats_UTalca/database_2020_DocPsychol&quot;) La función getwd() (sin nada entre paréntesis) te permite sabes cual es tu directorio actual. getwd() ## [1] &quot;C:/Users/Usuario/Documents/JoseLuis/UTalca_2018/Estadistica_Bookdown/estadistica&quot; Para importar datos puedes usar distintas funciones. Por ejemplo, para importar datos de tipo .txt debemos usar la función read.delim dat &lt;- read.delim(file = &quot;data/facebook_friends_2.txt&quot;) dat ## CASAS ## 1 108 ## 2 103 ## 3 252 ## 4 121 ## 5 93 ## 6 57 ## 7 40 ## 8 53 ## 9 22 ## 10 116 ## 11 98 Si ejecutas este comando en tu computador y lo comparas con los datos originales te darás cuenta que hay un error. Esto occurre porque por defecto esta función asume que tus datos tienen un encabezado. Es decir, el parámetro llamado &quot;header&quot; esta seteado en TRUE, que significa que la función espera un encabezado. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
